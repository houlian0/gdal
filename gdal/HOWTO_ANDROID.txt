See http://trac.osgeo.org/gdal/wiki/BuildingForAndroid for basic instructions

cd /Users/jaak/tmp/gdal-1.9.0
rm config.sub config.guess
wget http://git.savannah.gnu.org/cgit/config.git/plain/config.sub
wget http://git.savannah.gnu.org/cgit/config.git/plain/config.guess
export PATH=/Users/jaak/android-8-toolchain/bin:$PATH
export NDK_ROOT=/Users/jaak/dev/android-ndk-r7b


# build gdal
CFLAGS="-mthumb" CXXFLAGS="-mthumb" LIBS="-lsupc++ -lstdc++"  ./configure --host=arm-linux-androideabi --prefix=/Users/jaak/git/gdal/gdal/external/gdal

for multithread support edit port/cpl_config.h :
     /* #undef CPL_MULTIPROC_PTHREAD */
     #define CPL_MULTIPROC_PTHREAD 1

make
make install
#-> library is in external/gdal now
#make lib-target
#make install-lib

#generate swig bindings and wrappers
cd swig
make
cd java
make
cd ../..



# copy and build libraries in Android NDK project

cd /Users/jaak/Documents/workspace_mapsdk/play_Android_Samples1/jni
# copy library bin and wrappers:
cp /Users/jaak/git/gdal/gdal/external/gdal/lib/libgdal.a ./
cp /Users/jaak/git/gdal/gdal/external/gdal/include gdal/include

#copy wrappers
cp /Users/jaak/git/gdal/gdal/swig/java/*_wrap.cpp ./
cp /Users/jaak/git/gdal/gdal/swig/java/gdalconst_wrap.c ./

# copy headers
cp -r /Users/jaak/git/gdal/gdal/swig/java/org ../jniwrap/org

# make Android.mk file:
LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)
LOCAL_MODULE := gdal
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/gdal/include
LOCAL_SRC_FILES := libgdal.a
LOCAL_EXPORT_LDLIBS := -lz
include $(PREBUILT_STATIC_LIBRARY)

include $(CLEAR_VARS)
LOCAL_MODULE := gdaljni
LOCAL_SRC_FILES := gdal_wrap.cpp
LOCAL_STATIC_LIBRARIES := gdal
include $(BUILD_SHARED_LIBRARY)

include $(CLEAR_VARS)
LOCAL_MODULE := gdalconstjni
LOCAL_SRC_FILES := gdalconst_wrap.c
LOCAL_STATIC_LIBRARIES := gdal
include $(BUILD_SHARED_LIBRARY)

include $(CLEAR_VARS)
LOCAL_MODULE := ogrjni
LOCAL_SRC_FILES := ogr_wrap.cpp
LOCAL_STATIC_LIBRARIES := gdal
include $(BUILD_SHARED_LIBRARY)

include $(CLEAR_VARS)
LOCAL_MODULE := osrjni
LOCAL_SRC_FILES := osr_wrap.cpp
LOCAL_STATIC_LIBRARIES := gdal
include $(BUILD_SHARED_LIBRARY)

# build
ndk-build

# -> Result: .so files in NDK project libs/armeabi folder

